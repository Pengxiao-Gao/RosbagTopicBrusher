# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: memory_cruise.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13memory_cruise.proto\x12\"cp.cp_planning.proto.memory_cruise\"\xc1\x01\n\x08PointENU\x12\t\n\x01x\x18\x01 \x01(\x01\x12\t\n\x01y\x18\x02 \x01(\x01\x12\t\n\x01z\x18\x03 \x01(\x01\x12J\n\x14origin_global_coords\x18\x04 \x01(\x0b\x32,.cp.cp_planning.proto.memory_cruise.PointLLA\x12H\n\x10quaternion_local\x18\x05 \x01(\x0b\x32..cp.cp_planning.proto.memory_cruise.Quaternion\"\x86\x01\n\x08PointLLA\x12\x12\n\nlongtitude\x18\x01 \x01(\x01\x12\x10\n\x08latitude\x18\x02 \x01(\x01\x12\x10\n\x08\x61ltitude\x18\x03 \x01(\x01\x12\x42\n\nquaternion\x18\x04 \x01(\x0b\x32..cp.cp_planning.proto.memory_cruise.Quaternion\"\xdb\x01\n\tTransform\x12\x43\n\x0btransform_q\x18\x01 \x01(\x0b\x32..cp.cp_planning.proto.memory_cruise.Quaternion\x12\x41\n\x0btransform_t\x18\x02 \x01(\x0b\x32,.cp.cp_planning.proto.memory_cruise.Vector3d\x12\x46\n\x10transform_center\x18\x03 \x01(\x0b\x32,.cp.cp_planning.proto.memory_cruise.PointLLA\"E\n\tLaneOrder\x12\x1b\n\x13left_to_right_order\x18\x01 \x01(\r\x12\x1b\n\x13right_to_left_order\x18\x02 \x01(\r\"v\n\x08LaneTopo\x12\x12\n\nlane_order\x18\x01 \x01(\r\x12\x11\n\tlane_size\x18\x02 \x01(\r\x12\x43\n\x0bsplit_merge\x18\x03 \x01(\x0e\x32..cp.cp_planning.proto.memory_cruise.SplitMerge\"\xd8\x05\n\x04Lane\x12\x41\n\nlane_order\x18\x01 \x01(\x0b\x32-.cp.cp_planning.proto.memory_cruise.LaneOrder\x12?\n\tpre_lanes\x18\x02 \x03(\x0b\x32,.cp.cp_planning.proto.memory_cruise.LaneTopo\x12?\n\tlane_type\x18\x03 \x01(\x0e\x32,.cp.cp_planning.proto.memory_cruise.LaneType\x12H\n\x0elane_turn_type\x18\x04 \x01(\x0e\x32\x30.cp.cp_planning.proto.memory_cruise.LaneTurnType\x12L\n\x12left_boundary_type\x18\x05 \x01(\x0e\x32\x30.cp.cp_planning.proto.memory_cruise.BoundaryType\x12M\n\x13right_boundary_type\x18\x06 \x01(\x0e\x32\x30.cp.cp_planning.proto.memory_cruise.BoundaryType\x12\"\n\x1ais_left_near_road_boundary\x18\x07 \x01(\x08\x12#\n\x1bis_right_near_road_boundary\x18\x08 \x01(\x08\x12\x15\n\rhas_stop_line\x18\t \x01(\x08\x12\r\n\x05width\x18\n \x01(\x01\x12\x0e\n\x06offset\x18\x0b \x01(\x01\x12\x45\n\x0cwaiting_type\x18\x0c \x01(\x0e\x32/.cp.cp_planning.proto.memory_cruise.WaitingType\x12\x19\n\x11is_invisible_lane\x18\r \x01(\x08\x12\x43\n\x0bsplit_merge\x18\x0e \x01(\x0e\x32..cp.cp_planning.proto.memory_cruise.SplitMerge\"[\n\x08LaneInfo\x12\x16\n\x0e\x65go_lane_index\x18\x01 \x01(\r\x12\x37\n\x05lanes\x18\x02 \x03(\x0b\x32(.cp.cp_planning.proto.memory_cruise.Lane\"\x91\x01\n\x0bLineSegment\x12\x41\n\x0bstart_point\x18\x01 \x01(\x0b\x32,.cp.cp_planning.proto.memory_cruise.PointENU\x12?\n\tend_point\x18\x02 \x01(\x0b\x32,.cp.cp_planning.proto.memory_cruise.PointENU\"b\n\x0bTrafficBulb\x12S\n\x10light_directions\x18\x01 \x03(\x0e\x32\x39.cp.cp_planning.proto.memory_cruise.TrafficLightDirection\"\xa7\x01\n\x0cTrafficLight\x12>\n\x08position\x18\x01 \x01(\x0b\x32,.cp.cp_planning.proto.memory_cruise.PointENU\x12\x0f\n\x07heading\x18\x02 \x01(\x01\x12\x46\n\rtraffic_bulbs\x18\x03 \x03(\x0b\x32/.cp.cp_planning.proto.memory_cruise.TrafficBulb\"\xe4\x02\n\x10IntersectionInfo\x12\x17\n\x0fin_intersection\x18\x01 \x01(\x08\x12\x15\n\rhas_stop_line\x18\x02 \x01(\x08\x12G\n\x0e\x65xit_road_line\x18\x03 \x01(\x0b\x32/.cp.cp_planning.proto.memory_cruise.LineSegment\x12H\n\x12lane_center_points\x18\x04 \x03(\x0b\x32,.cp.cp_planning.proto.memory_cruise.PointENU\x12\x43\n\nstop_lines\x18\x05 \x03(\x0b\x32/.cp.cp_planning.proto.memory_cruise.LineSegment\x12H\n\x0etraffic_lights\x18\x06 \x03(\x0b\x32\x30.cp.cp_planning.proto.memory_cruise.TrafficLight\"\xc8\x04\n\x0cManualAction\x12`\n\x13intersection_action\x18\x01 \x01(\x0e\x32\x43.cp.cp_planning.proto.memory_cruise.ManualAction.IntersectionAction\x12]\n\x12lane_change_action\x18\x02 \x01(\x0e\x32\x41.cp.cp_planning.proto.memory_cruise.ManualAction.LaneChangeAction\x12P\n\x0bramp_action\x18\x03 \x01(\x0e\x32;.cp.cp_planning.proto.memory_cruise.ManualAction.RampAction\"^\n\x12IntersectionAction\x12\x1a\n\x16NO_INTERSECTION_ACTION\x10\x00\x12\x16\n\x12START_INTERSECTION\x10\x01\x12\x14\n\x10\x45ND_INTERSECTION\x10\x02\"Y\n\x10LaneChangeAction\x12\x19\n\x15NO_LANE_CHANGE_ACTION\x10\x00\x12\x15\n\x11START_LANE_CHANGE\x10\x01\x12\x13\n\x0f\x45ND_LANE_CHANGE\x10\x02\"j\n\nRampAction\x12\x12\n\x0eNO_RAMP_ACTION\x10\x00\x12\x11\n\rSTART_RAMP_IN\x10\x01\x12\x0f\n\x0b\x45ND_RAMP_IN\x10\x02\x12\x12\n\x0eSTART_RAMP_OUT\x10\x03\x12\x10\n\x0c\x45ND_RAMP_OUT\x10\x04\"\xcf\x01\n\x10MergeDivergeInfo\x12\x42\n\x04type\x18\x01 \x01(\x0e\x32\x34.cp.cp_planning.proto.memory_cruise.MergeDivergeType\x12\t\n\x01l\x18\x02 \x01(\x01\x12\x16\n\x0eleft_lane_size\x18\x03 \x01(\r\x12\x17\n\x0fright_lane_size\x18\x04 \x01(\r\x12;\n\x05point\x18\x05 \x01(\x0b\x32,.cp.cp_planning.proto.memory_cruise.PointENU\"\xa9\x01\n\x10VehicleLightData\x12G\n\x0bturn_signal\x18\x01 \x01(\x0e\x32\x32.cp.cp_planning.proto.memory_cruise.TurnSignalType\x12L\n\x10turn_signal_type\x18\x02 \x01(\x0e\x32\x32.cp.cp_planning.proto.memory_cruise.TurnSignalType\"_\n\x0bVehicleInfo\x12P\n\x12vehicle_light_data\x18\x01 \x01(\x0b\x32\x34.cp.cp_planning.proto.memory_cruise.VehicleLightData\"`\n\tCrosswalk\x12\r\n\x05width\x18\x01 \x01(\x01\x12\x44\n\x0epolygon_points\x18\x02 \x03(\x0b\x32,.cp.cp_planning.proto.memory_cruise.PointENU\"R\n\rCrosswalkInfo\x12\x41\n\ncrosswalks\x18\x01 \x03(\x0b\x32-.cp.cp_planning.proto.memory_cruise.Crosswalk\"\x9e\x01\n\x08LandMark\x12\x44\n\x0epolygon_points\x18\x01 \x03(\x0b\x32,.cp.cp_planning.proto.memory_cruise.PointENU\x12L\n\x12landmark_turn_type\x18\x02 \x01(\x0e\x32\x30.cp.cp_planning.proto.memory_cruise.LaneTurnType\"O\n\x0cLandMarkInfo\x12?\n\tlandmarks\x18\x01 \x03(\x0b\x32,.cp.cp_planning.proto.memory_cruise.LandMark\"8\n\nQuaternion\x12\t\n\x01w\x18\x01 \x01(\x01\x12\t\n\x01x\x18\x02 \x01(\x01\x12\t\n\x01y\x18\x03 \x01(\x01\x12\t\n\x01z\x18\x04 \x01(\x01\"+\n\x08Vector3d\x12\t\n\x01x\x18\x01 \x01(\x01\x12\t\n\x01y\x18\x02 \x01(\x01\x12\t\n\x01z\x18\x03 \x01(\x01\"[\n\x13SurroundingVehicles\x12\x15\n\raverage_speed\x18\x01 \x01(\x01\x12\x17\n\x0fvehicle_density\x18\x02 \x01(\x01\x12\x14\n\x0ctraffic_flow\x18\x03 \x01(\x01\"\xbb\x07\n\x08TrajInfo\x12\x11\n\ttimestamp\x18\x01 \x01(\x04\x12;\n\x05point\x18\x02 \x01(\x0b\x32,.cp.cp_planning.proto.memory_cruise.PointENU\x12\t\n\x01s\x18\x03 \x01(\x01\x12\t\n\x01v\x18\x04 \x01(\x01\x12\x13\n\x0blimit_speed\x18\x05 \x01(\x01\x12?\n\tlane_info\x18\x06 \x01(\x0b\x32,.cp.cp_planning.proto.memory_cruise.LaneInfo\x12O\n\x11intersection_info\x18\x07 \x01(\x0b\x32\x34.cp.cp_planning.proto.memory_cruise.IntersectionInfo\x12\x17\n\x0fleft_road_width\x18\x08 \x01(\x01\x12\x18\n\x10right_road_width\x18\t \x01(\x01\x12P\n\x12merge_diverge_info\x18\n \x01(\x0b\x32\x34.cp.cp_planning.proto.memory_cruise.MergeDivergeInfo\x12G\n\rmanual_action\x18\x0b \x01(\x0b\x32\x30.cp.cp_planning.proto.memory_cruise.ManualAction\x12L\n\x15transform_llh_to_boot\x18\x0c \x01(\x0b\x32-.cp.cp_planning.proto.memory_cruise.Transform\x12\x45\n\x0cvehicle_info\x18\r \x01(\x0b\x32/.cp.cp_planning.proto.memory_cruise.VehicleInfo\x12I\n\x0e\x63rosswalk_info\x18\x0e \x01(\x0b\x32\x31.cp.cp_planning.proto.memory_cruise.CrosswalkInfo\x12H\n\x0eland_mark_info\x18\x0f \x01(\x0b\x32\x30.cp.cp_planning.proto.memory_cruise.LandMarkInfo\x12\x1f\n\x17left_road_width_from_lb\x18\x10 \x01(\x08\x12 \n\x18right_road_width_from_lb\x18\x11 \x01(\x08\x12\x10\n\x08is_queue\x18\x12 \x01(\x08\x12U\n\x14surrounding_vehicles\x18\x13 \x01(\x0b\x32\x37.cp.cp_planning.proto.memory_cruise.SurroundingVehicles\"O\n\x0cMemoryCruise\x12?\n\ttraj_info\x18\x01 \x03(\x0b\x32,.cp.cp_planning.proto.memory_cruise.TrajInfo*I\n\nSplitMerge\x12\x17\n\x13SPLIT_MERGE_UNKNOWN\x10\x00\x12\t\n\x05SPLIT\x10\x01\x12\t\n\x05MERGE\x10\x02\x12\x0c\n\x08\x43ONTINUE\x10\x03*\xc5\t\n\x08LaneType\x12\x15\n\x11LANE_TYPE_UNKNOWN\x10\x00\x12\x14\n\x10LANE_TYPE_NORMAL\x10\x01\x12\x17\n\x13LANE_TYPE_EMERGENCY\x10\x05\x12\x11\n\rLANE_TYPE_BUS\x10\x06\x12\x15\n\x11LANE_TYPE_PASSING\x10\x07\x12\x11\n\rLANE_TYPE_HOV\x10\x08\x12\x18\n\x14LANE_TYPE_ACCELERATE\x10\t\x12\x13\n\x0fLANE_TYPE_UTURN\x10\n\x12\x18\n\x14LANE_TYPE_DECELERATE\x10\x0b\x12\x16\n\x12LANE_TYPE_SHOULDER\x10\x0c\x12\x1a\n\x16LANE_TYPE_INTERSECTION\x10\x0e\x12\x17\n\x13LANE_TYPE_NON_MOTOR\x10\x0f\x12\x19\n\x15LANE_TYPE_MIXED_MOTOR\x10\x10\x12\x17\n\x13LANE_TYPE_SIDE_WALK\x10\x11\x12\x18\n\x14LANE_TYPE_MOTORCYCLE\x10\x12\x12\x16\n\x12LANE_TYPE_TOLL_ETC\x10\x13\x12\x12\n\x0eLANE_TYPE_TOLL\x10\x14\x12\x18\n\x14LANE_TYPE_CHECKPOINT\x10\x15\x12\x12\n\x0eLANE_TYPE_RAMP\x10\x16\x12\x15\n\x11LANE_TYPE_BARRIER\x10\x17\x12\x1c\n\x18LANE_TYPE_CHANNELIZATION\x10\x18\x12\x1c\n\x18LANE_TYPE_EMERGENCE_STOP\x10\x19\x12\x1d\n\x19LANE_TYPE_HAZARDOUS_GOODS\x10\x1a\x12\x19\n\x15LANE_TYPE_STEEP_GRADE\x10\x1b\x12\x1c\n\x18LANE_TYPE_DIREC_VARIABLE\x10\x1c\x12\x19\n\x15LANE_TYPE_CUSTOMS_SUP\x10\x1d\x12\x1c\n\x18LANE_TYPE_EMERGENCE_RAMP\x10\x1e\x12\x15\n\x11LANE_TYPE_PARKING\x10\x1f\x12\x13\n\x0fLANE_TYPE_TIDAL\x10 \x12\x17\n\x13LANE_TYPE_TEMPORARY\x10!\x12$\n LANE_TYPE_LEFT_TURN_WAITING_AREA\x10\"\x12(\n$LANE_TYPE_STRAIGHT_TURN_WAITING_AREA\x10#\x12\x16\n\x12LANE_TYPE_LEFT_ACC\x10$\x12\x17\n\x13LANE_TYPE_RIGHT_ACC\x10%\x12\x16\n\x12LANE_TYPE_LEFT_DEC\x10&\x12\x17\n\x13LANE_TYPE_RIGHT_DEC\x10\'\x12\x1a\n\x16LANE_TYPE_SERVICE_RAMP\x10(\x12\x12\n\x0eLANE_TYPE_CURB\x10)\x12\x15\n\x11LANE_TYPE_RAILWAY\x10*\x12\x16\n\x12LANE_TYPE_BUS_STOP\x10+\x12\x18\n\x14LANE_TYPE_ROUNDABOUT\x10,\x12\x15\n\x11LANE_TYPE_INVALID\x10-\x12\x12\n\x0eLANE_TYPE_WIDE\x10.\x12\x15\n\x11LANE_TYPE_VIRTUAL\x10/\x12\x14\n\x10LANE_TYPE_OTHERS\x10?\x12\x15\n\x11LANE_TYPE_ACC_DEC\x10\x46\x12\x1a\n\x16LANE_TYPE_WAITING_AREA\x10G\x12\x19\n\x15LANE_TYPE_TOLL_MANUAL\x10H*\xfa\x03\n\x0cLaneTurnType\x12\x15\n\x11TURN_TYPE_UNKNOWN\x10\x00\x12\x0c\n\x08STRAIGHT\x10\x01\x12\r\n\tLEFT_TURN\x10\x02\x12\x0e\n\nRIGHT_TURN\x10\x03\x12\x13\n\x0fLEFT_CONFLUENCE\x10\x06\x12\x14\n\x10RIGHT_CONFLUENCE\x10\x07\x12\x0f\n\x0bU_TURN_LEFT\x10\x08\x12\x10\n\x0cU_TURN_RIGHT\x10\t\x12\x12\n\x0eTURN_TYPE_TEXT\x10\x15\x12\x16\n\x12STRAIGHT_LEFT_TURN\x10\x16\x12\x17\n\x13STRAIGHT_RIGHT_TURN\x10\x17\x12\x13\n\x0fSTRAIGHT_U_TURN\x10\x18\x12\x14\n\x10LEFT_TURN_U_TURN\x10\x19\x12\x1b\n\x17LEFT_TURN_AND_INTERFLOW\x10\x1a\x12\x1c\n\x18RIGHT_TURN_AND_INTERFLOW\x10\x1b\x12\x13\n\x0fLEFT_RIGHT_TURN\x10\x1c\x12\x10\n\x0cNO_LEFT_TURN\x10\x1d\x12\x11\n\rNO_RIGHT_TURN\x10\x1e\x12\r\n\tNO_U_TURN\x10\x1f\x12\x17\n\x13STRAIGHT_LEFT_RIGHT\x10 \x12\x13\n\x0fSTRAIGHT_U_LEFT\x10!\x12\x0e\n\nLEFT_MERGE\x10\"\x12\x0f\n\x0bRIGHT_MERGE\x10#\x12\x15\n\x11RIGHT_TURN_U_TURN\x10$*\xb7\x06\n\x0c\x42oundaryType\x12\x19\n\x15\x42OUNDARY_TYPE_UNKNOWN\x10\x00\x12\x18\n\x14\x42OUNDARY_TYPE_DASHED\x10\x01\x12\x17\n\x13\x42OUNDARY_TYPE_SOLID\x10\x02\x12\x1e\n\x1a\x42OUNDARY_TYPE_DOUBLE_SOLID\x10\x03\x12\x1f\n\x1b\x42OUNDARY_TYPE_DOUBLE_DASHED\x10\x04\x12)\n%BOUNDARY_TYPE_LEFT_DASHED_RIGHT_SOLID\x10\x05\x12)\n%BOUNDARY_TYPE_LEFT_SOLID_RIGHT_DASHED\x10\x06\x12*\n&BOUNDARY_TYPE_LEFT_DASHED_RIGHT_DASHED\x10\x07\x12(\n$BOUNDARY_TYPE_LEFT_SOLID_RIGHT_SOLID\x10\x08\x12\x19\n\x15\x42OUNDARY_TYPE_ZIG_ZAG\x10\t\x12\x1c\n\x18\x42OUNDARY_TYPE_BOTTS_DOTS\x10\n\x12&\n\"BOUNDARY_TYPE_CHANGEABLE_LANE_MARK\x10\x0b\x12\x19\n\x15\x42OUNDARY_TYPE_LOGICAL\x10\x0c\x12\x1a\n\x16\x42OUNDARY_TYPE_PHYSICAL\x10\r\x12\x19\n\x15\x42OUNDARY_TYPE_VIRTUAL\x10\x0e\x12#\n\x1f\x42OUNDARY_TYPE_SHORT_DASHED_LINE\x10\x0f\x12\x1c\n\x18\x42OUNDARY_TYPE_SHADE_AREA\x10\x10\x12&\n\"BOUNDARY_TYPE_LANE_VIRTUAL_MARKING\x10\x11\x12.\n*BOUNDARY_TYPE_INTERSECTION_VIRTUAL_MARKING\x10\x12\x12&\n\"BOUNDARY_TYPE_CURB_VIRTUAL_MARKING\x10\x13\x12\x1f\n\x1b\x42OUNDARY_TYPE_UNCLOSED_ROAD\x10\x14\x12#\n\x1f\x42OUNDARY_TYPE_ROAD_VIRTUAL_LINE\x10\x15\x12\x16\n\x12\x42OUNDARY_TYPE_ROAD\x10\x16\x12\x18\n\x14\x42OUNDARY_TYPE_OTHERS\x10\x63*_\n\x0bWaitingType\x12\x18\n\x14WAITING_TYPE_UNKNOWN\x10\x00\x12\x17\n\x13WAITING_TYPE_NORMAL\x10\x01\x12\x1d\n\x19WAITING_TYPE_WAITING_AREA\x10\x02*\xe9\x01\n\x15TrafficLightDirection\x12#\n\x1fTRAFFIC_LIGHT_DIRECTION_UNKNOWN\x10\x00\x12\x1a\n\x16TRAFFIC_LIGHT_STRAIGHT\x10\x01\x12\x16\n\x12TRAFFIC_LIGHT_LEFT\x10\x02\x12\x17\n\x13TRAFFIC_LIGHT_RIGHT\x10\x03\x12\x18\n\x14TRAFFIC_LIGHT_CIRCLE\x10\x04\x12\x18\n\x14TRAFFIC_LIGHT_U_TURN\x10\x05\x12*\n&TRAFFIC_LIGHT_NO_DISTINGUISH_DIRECTION\x10\x06*g\n\x10MergeDivergeType\x12\x19\n\x15MERGE_DIVERGE_UNKNOWN\x10\x00\x12\x0f\n\x0bMERGE_POINT\x10\x01\x12\x11\n\rDIVERGE_POINT\x10\x02\x12\x14\n\x10NO_MERGE_DIVERGE\x10\x03*F\n\x0eTurnSignalType\x12\x08\n\x04NONE\x10\x00\x12\x08\n\x04LEFT\x10\x01\x12\t\n\x05RIGHT\x10\x02\x12\x15\n\x11\x45MERGENCY_FLASHER\x10\x03\x62\x06proto3')

_SPLITMERGE = DESCRIPTOR.enum_types_by_name['SplitMerge']
SplitMerge = enum_type_wrapper.EnumTypeWrapper(_SPLITMERGE)
_LANETYPE = DESCRIPTOR.enum_types_by_name['LaneType']
LaneType = enum_type_wrapper.EnumTypeWrapper(_LANETYPE)
_LANETURNTYPE = DESCRIPTOR.enum_types_by_name['LaneTurnType']
LaneTurnType = enum_type_wrapper.EnumTypeWrapper(_LANETURNTYPE)
_BOUNDARYTYPE = DESCRIPTOR.enum_types_by_name['BoundaryType']
BoundaryType = enum_type_wrapper.EnumTypeWrapper(_BOUNDARYTYPE)
_WAITINGTYPE = DESCRIPTOR.enum_types_by_name['WaitingType']
WaitingType = enum_type_wrapper.EnumTypeWrapper(_WAITINGTYPE)
_TRAFFICLIGHTDIRECTION = DESCRIPTOR.enum_types_by_name['TrafficLightDirection']
TrafficLightDirection = enum_type_wrapper.EnumTypeWrapper(_TRAFFICLIGHTDIRECTION)
_MERGEDIVERGETYPE = DESCRIPTOR.enum_types_by_name['MergeDivergeType']
MergeDivergeType = enum_type_wrapper.EnumTypeWrapper(_MERGEDIVERGETYPE)
_TURNSIGNALTYPE = DESCRIPTOR.enum_types_by_name['TurnSignalType']
TurnSignalType = enum_type_wrapper.EnumTypeWrapper(_TURNSIGNALTYPE)
SPLIT_MERGE_UNKNOWN = 0
SPLIT = 1
MERGE = 2
CONTINUE = 3
LANE_TYPE_UNKNOWN = 0
LANE_TYPE_NORMAL = 1
LANE_TYPE_EMERGENCY = 5
LANE_TYPE_BUS = 6
LANE_TYPE_PASSING = 7
LANE_TYPE_HOV = 8
LANE_TYPE_ACCELERATE = 9
LANE_TYPE_UTURN = 10
LANE_TYPE_DECELERATE = 11
LANE_TYPE_SHOULDER = 12
LANE_TYPE_INTERSECTION = 14
LANE_TYPE_NON_MOTOR = 15
LANE_TYPE_MIXED_MOTOR = 16
LANE_TYPE_SIDE_WALK = 17
LANE_TYPE_MOTORCYCLE = 18
LANE_TYPE_TOLL_ETC = 19
LANE_TYPE_TOLL = 20
LANE_TYPE_CHECKPOINT = 21
LANE_TYPE_RAMP = 22
LANE_TYPE_BARRIER = 23
LANE_TYPE_CHANNELIZATION = 24
LANE_TYPE_EMERGENCE_STOP = 25
LANE_TYPE_HAZARDOUS_GOODS = 26
LANE_TYPE_STEEP_GRADE = 27
LANE_TYPE_DIREC_VARIABLE = 28
LANE_TYPE_CUSTOMS_SUP = 29
LANE_TYPE_EMERGENCE_RAMP = 30
LANE_TYPE_PARKING = 31
LANE_TYPE_TIDAL = 32
LANE_TYPE_TEMPORARY = 33
LANE_TYPE_LEFT_TURN_WAITING_AREA = 34
LANE_TYPE_STRAIGHT_TURN_WAITING_AREA = 35
LANE_TYPE_LEFT_ACC = 36
LANE_TYPE_RIGHT_ACC = 37
LANE_TYPE_LEFT_DEC = 38
LANE_TYPE_RIGHT_DEC = 39
LANE_TYPE_SERVICE_RAMP = 40
LANE_TYPE_CURB = 41
LANE_TYPE_RAILWAY = 42
LANE_TYPE_BUS_STOP = 43
LANE_TYPE_ROUNDABOUT = 44
LANE_TYPE_INVALID = 45
LANE_TYPE_WIDE = 46
LANE_TYPE_VIRTUAL = 47
LANE_TYPE_OTHERS = 63
LANE_TYPE_ACC_DEC = 70
LANE_TYPE_WAITING_AREA = 71
LANE_TYPE_TOLL_MANUAL = 72
TURN_TYPE_UNKNOWN = 0
STRAIGHT = 1
LEFT_TURN = 2
RIGHT_TURN = 3
LEFT_CONFLUENCE = 6
RIGHT_CONFLUENCE = 7
U_TURN_LEFT = 8
U_TURN_RIGHT = 9
TURN_TYPE_TEXT = 21
STRAIGHT_LEFT_TURN = 22
STRAIGHT_RIGHT_TURN = 23
STRAIGHT_U_TURN = 24
LEFT_TURN_U_TURN = 25
LEFT_TURN_AND_INTERFLOW = 26
RIGHT_TURN_AND_INTERFLOW = 27
LEFT_RIGHT_TURN = 28
NO_LEFT_TURN = 29
NO_RIGHT_TURN = 30
NO_U_TURN = 31
STRAIGHT_LEFT_RIGHT = 32
STRAIGHT_U_LEFT = 33
LEFT_MERGE = 34
RIGHT_MERGE = 35
RIGHT_TURN_U_TURN = 36
BOUNDARY_TYPE_UNKNOWN = 0
BOUNDARY_TYPE_DASHED = 1
BOUNDARY_TYPE_SOLID = 2
BOUNDARY_TYPE_DOUBLE_SOLID = 3
BOUNDARY_TYPE_DOUBLE_DASHED = 4
BOUNDARY_TYPE_LEFT_DASHED_RIGHT_SOLID = 5
BOUNDARY_TYPE_LEFT_SOLID_RIGHT_DASHED = 6
BOUNDARY_TYPE_LEFT_DASHED_RIGHT_DASHED = 7
BOUNDARY_TYPE_LEFT_SOLID_RIGHT_SOLID = 8
BOUNDARY_TYPE_ZIG_ZAG = 9
BOUNDARY_TYPE_BOTTS_DOTS = 10
BOUNDARY_TYPE_CHANGEABLE_LANE_MARK = 11
BOUNDARY_TYPE_LOGICAL = 12
BOUNDARY_TYPE_PHYSICAL = 13
BOUNDARY_TYPE_VIRTUAL = 14
BOUNDARY_TYPE_SHORT_DASHED_LINE = 15
BOUNDARY_TYPE_SHADE_AREA = 16
BOUNDARY_TYPE_LANE_VIRTUAL_MARKING = 17
BOUNDARY_TYPE_INTERSECTION_VIRTUAL_MARKING = 18
BOUNDARY_TYPE_CURB_VIRTUAL_MARKING = 19
BOUNDARY_TYPE_UNCLOSED_ROAD = 20
BOUNDARY_TYPE_ROAD_VIRTUAL_LINE = 21
BOUNDARY_TYPE_ROAD = 22
BOUNDARY_TYPE_OTHERS = 99
WAITING_TYPE_UNKNOWN = 0
WAITING_TYPE_NORMAL = 1
WAITING_TYPE_WAITING_AREA = 2
TRAFFIC_LIGHT_DIRECTION_UNKNOWN = 0
TRAFFIC_LIGHT_STRAIGHT = 1
TRAFFIC_LIGHT_LEFT = 2
TRAFFIC_LIGHT_RIGHT = 3
TRAFFIC_LIGHT_CIRCLE = 4
TRAFFIC_LIGHT_U_TURN = 5
TRAFFIC_LIGHT_NO_DISTINGUISH_DIRECTION = 6
MERGE_DIVERGE_UNKNOWN = 0
MERGE_POINT = 1
DIVERGE_POINT = 2
NO_MERGE_DIVERGE = 3
NONE = 0
LEFT = 1
RIGHT = 2
EMERGENCY_FLASHER = 3


_POINTENU = DESCRIPTOR.message_types_by_name['PointENU']
_POINTLLA = DESCRIPTOR.message_types_by_name['PointLLA']
_TRANSFORM = DESCRIPTOR.message_types_by_name['Transform']
_LANEORDER = DESCRIPTOR.message_types_by_name['LaneOrder']
_LANETOPO = DESCRIPTOR.message_types_by_name['LaneTopo']
_LANE = DESCRIPTOR.message_types_by_name['Lane']
_LANEINFO = DESCRIPTOR.message_types_by_name['LaneInfo']
_LINESEGMENT = DESCRIPTOR.message_types_by_name['LineSegment']
_TRAFFICBULB = DESCRIPTOR.message_types_by_name['TrafficBulb']
_TRAFFICLIGHT = DESCRIPTOR.message_types_by_name['TrafficLight']
_INTERSECTIONINFO = DESCRIPTOR.message_types_by_name['IntersectionInfo']
_MANUALACTION = DESCRIPTOR.message_types_by_name['ManualAction']
_MERGEDIVERGEINFO = DESCRIPTOR.message_types_by_name['MergeDivergeInfo']
_VEHICLELIGHTDATA = DESCRIPTOR.message_types_by_name['VehicleLightData']
_VEHICLEINFO = DESCRIPTOR.message_types_by_name['VehicleInfo']
_CROSSWALK = DESCRIPTOR.message_types_by_name['Crosswalk']
_CROSSWALKINFO = DESCRIPTOR.message_types_by_name['CrosswalkInfo']
_LANDMARK = DESCRIPTOR.message_types_by_name['LandMark']
_LANDMARKINFO = DESCRIPTOR.message_types_by_name['LandMarkInfo']
_QUATERNION = DESCRIPTOR.message_types_by_name['Quaternion']
_VECTOR3D = DESCRIPTOR.message_types_by_name['Vector3d']
_SURROUNDINGVEHICLES = DESCRIPTOR.message_types_by_name['SurroundingVehicles']
_TRAJINFO = DESCRIPTOR.message_types_by_name['TrajInfo']
_MEMORYCRUISE = DESCRIPTOR.message_types_by_name['MemoryCruise']
_MANUALACTION_INTERSECTIONACTION = _MANUALACTION.enum_types_by_name['IntersectionAction']
_MANUALACTION_LANECHANGEACTION = _MANUALACTION.enum_types_by_name['LaneChangeAction']
_MANUALACTION_RAMPACTION = _MANUALACTION.enum_types_by_name['RampAction']
PointENU = _reflection.GeneratedProtocolMessageType('PointENU', (_message.Message,), {
  'DESCRIPTOR' : _POINTENU,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.PointENU)
  })
_sym_db.RegisterMessage(PointENU)

PointLLA = _reflection.GeneratedProtocolMessageType('PointLLA', (_message.Message,), {
  'DESCRIPTOR' : _POINTLLA,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.PointLLA)
  })
_sym_db.RegisterMessage(PointLLA)

Transform = _reflection.GeneratedProtocolMessageType('Transform', (_message.Message,), {
  'DESCRIPTOR' : _TRANSFORM,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.Transform)
  })
_sym_db.RegisterMessage(Transform)

LaneOrder = _reflection.GeneratedProtocolMessageType('LaneOrder', (_message.Message,), {
  'DESCRIPTOR' : _LANEORDER,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.LaneOrder)
  })
_sym_db.RegisterMessage(LaneOrder)

LaneTopo = _reflection.GeneratedProtocolMessageType('LaneTopo', (_message.Message,), {
  'DESCRIPTOR' : _LANETOPO,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.LaneTopo)
  })
_sym_db.RegisterMessage(LaneTopo)

Lane = _reflection.GeneratedProtocolMessageType('Lane', (_message.Message,), {
  'DESCRIPTOR' : _LANE,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.Lane)
  })
_sym_db.RegisterMessage(Lane)

LaneInfo = _reflection.GeneratedProtocolMessageType('LaneInfo', (_message.Message,), {
  'DESCRIPTOR' : _LANEINFO,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.LaneInfo)
  })
_sym_db.RegisterMessage(LaneInfo)

LineSegment = _reflection.GeneratedProtocolMessageType('LineSegment', (_message.Message,), {
  'DESCRIPTOR' : _LINESEGMENT,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.LineSegment)
  })
_sym_db.RegisterMessage(LineSegment)

TrafficBulb = _reflection.GeneratedProtocolMessageType('TrafficBulb', (_message.Message,), {
  'DESCRIPTOR' : _TRAFFICBULB,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.TrafficBulb)
  })
_sym_db.RegisterMessage(TrafficBulb)

TrafficLight = _reflection.GeneratedProtocolMessageType('TrafficLight', (_message.Message,), {
  'DESCRIPTOR' : _TRAFFICLIGHT,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.TrafficLight)
  })
_sym_db.RegisterMessage(TrafficLight)

IntersectionInfo = _reflection.GeneratedProtocolMessageType('IntersectionInfo', (_message.Message,), {
  'DESCRIPTOR' : _INTERSECTIONINFO,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.IntersectionInfo)
  })
_sym_db.RegisterMessage(IntersectionInfo)

ManualAction = _reflection.GeneratedProtocolMessageType('ManualAction', (_message.Message,), {
  'DESCRIPTOR' : _MANUALACTION,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.ManualAction)
  })
_sym_db.RegisterMessage(ManualAction)

MergeDivergeInfo = _reflection.GeneratedProtocolMessageType('MergeDivergeInfo', (_message.Message,), {
  'DESCRIPTOR' : _MERGEDIVERGEINFO,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.MergeDivergeInfo)
  })
_sym_db.RegisterMessage(MergeDivergeInfo)

VehicleLightData = _reflection.GeneratedProtocolMessageType('VehicleLightData', (_message.Message,), {
  'DESCRIPTOR' : _VEHICLELIGHTDATA,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.VehicleLightData)
  })
_sym_db.RegisterMessage(VehicleLightData)

VehicleInfo = _reflection.GeneratedProtocolMessageType('VehicleInfo', (_message.Message,), {
  'DESCRIPTOR' : _VEHICLEINFO,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.VehicleInfo)
  })
_sym_db.RegisterMessage(VehicleInfo)

Crosswalk = _reflection.GeneratedProtocolMessageType('Crosswalk', (_message.Message,), {
  'DESCRIPTOR' : _CROSSWALK,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.Crosswalk)
  })
_sym_db.RegisterMessage(Crosswalk)

CrosswalkInfo = _reflection.GeneratedProtocolMessageType('CrosswalkInfo', (_message.Message,), {
  'DESCRIPTOR' : _CROSSWALKINFO,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.CrosswalkInfo)
  })
_sym_db.RegisterMessage(CrosswalkInfo)

LandMark = _reflection.GeneratedProtocolMessageType('LandMark', (_message.Message,), {
  'DESCRIPTOR' : _LANDMARK,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.LandMark)
  })
_sym_db.RegisterMessage(LandMark)

LandMarkInfo = _reflection.GeneratedProtocolMessageType('LandMarkInfo', (_message.Message,), {
  'DESCRIPTOR' : _LANDMARKINFO,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.LandMarkInfo)
  })
_sym_db.RegisterMessage(LandMarkInfo)

Quaternion = _reflection.GeneratedProtocolMessageType('Quaternion', (_message.Message,), {
  'DESCRIPTOR' : _QUATERNION,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.Quaternion)
  })
_sym_db.RegisterMessage(Quaternion)

Vector3d = _reflection.GeneratedProtocolMessageType('Vector3d', (_message.Message,), {
  'DESCRIPTOR' : _VECTOR3D,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.Vector3d)
  })
_sym_db.RegisterMessage(Vector3d)

SurroundingVehicles = _reflection.GeneratedProtocolMessageType('SurroundingVehicles', (_message.Message,), {
  'DESCRIPTOR' : _SURROUNDINGVEHICLES,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.SurroundingVehicles)
  })
_sym_db.RegisterMessage(SurroundingVehicles)

TrajInfo = _reflection.GeneratedProtocolMessageType('TrajInfo', (_message.Message,), {
  'DESCRIPTOR' : _TRAJINFO,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.TrajInfo)
  })
_sym_db.RegisterMessage(TrajInfo)

MemoryCruise = _reflection.GeneratedProtocolMessageType('MemoryCruise', (_message.Message,), {
  'DESCRIPTOR' : _MEMORYCRUISE,
  '__module__' : 'memory_cruise_pb2'
  # @@protoc_insertion_point(class_scope:cp.cp_planning.proto.memory_cruise.MemoryCruise)
  })
_sym_db.RegisterMessage(MemoryCruise)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _SPLITMERGE._serialized_start=5131
  _SPLITMERGE._serialized_end=5204
  _LANETYPE._serialized_start=5207
  _LANETYPE._serialized_end=6428
  _LANETURNTYPE._serialized_start=6431
  _LANETURNTYPE._serialized_end=6937
  _BOUNDARYTYPE._serialized_start=6940
  _BOUNDARYTYPE._serialized_end=7763
  _WAITINGTYPE._serialized_start=7765
  _WAITINGTYPE._serialized_end=7860
  _TRAFFICLIGHTDIRECTION._serialized_start=7863
  _TRAFFICLIGHTDIRECTION._serialized_end=8096
  _MERGEDIVERGETYPE._serialized_start=8098
  _MERGEDIVERGETYPE._serialized_end=8201
  _TURNSIGNALTYPE._serialized_start=8203
  _TURNSIGNALTYPE._serialized_end=8273
  _POINTENU._serialized_start=60
  _POINTENU._serialized_end=253
  _POINTLLA._serialized_start=256
  _POINTLLA._serialized_end=390
  _TRANSFORM._serialized_start=393
  _TRANSFORM._serialized_end=612
  _LANEORDER._serialized_start=614
  _LANEORDER._serialized_end=683
  _LANETOPO._serialized_start=685
  _LANETOPO._serialized_end=803
  _LANE._serialized_start=806
  _LANE._serialized_end=1534
  _LANEINFO._serialized_start=1536
  _LANEINFO._serialized_end=1627
  _LINESEGMENT._serialized_start=1630
  _LINESEGMENT._serialized_end=1775
  _TRAFFICBULB._serialized_start=1777
  _TRAFFICBULB._serialized_end=1875
  _TRAFFICLIGHT._serialized_start=1878
  _TRAFFICLIGHT._serialized_end=2045
  _INTERSECTIONINFO._serialized_start=2048
  _INTERSECTIONINFO._serialized_end=2404
  _MANUALACTION._serialized_start=2407
  _MANUALACTION._serialized_end=2991
  _MANUALACTION_INTERSECTIONACTION._serialized_start=2698
  _MANUALACTION_INTERSECTIONACTION._serialized_end=2792
  _MANUALACTION_LANECHANGEACTION._serialized_start=2794
  _MANUALACTION_LANECHANGEACTION._serialized_end=2883
  _MANUALACTION_RAMPACTION._serialized_start=2885
  _MANUALACTION_RAMPACTION._serialized_end=2991
  _MERGEDIVERGEINFO._serialized_start=2994
  _MERGEDIVERGEINFO._serialized_end=3201
  _VEHICLELIGHTDATA._serialized_start=3204
  _VEHICLELIGHTDATA._serialized_end=3373
  _VEHICLEINFO._serialized_start=3375
  _VEHICLEINFO._serialized_end=3470
  _CROSSWALK._serialized_start=3472
  _CROSSWALK._serialized_end=3568
  _CROSSWALKINFO._serialized_start=3570
  _CROSSWALKINFO._serialized_end=3652
  _LANDMARK._serialized_start=3655
  _LANDMARK._serialized_end=3813
  _LANDMARKINFO._serialized_start=3815
  _LANDMARKINFO._serialized_end=3894
  _QUATERNION._serialized_start=3896
  _QUATERNION._serialized_end=3952
  _VECTOR3D._serialized_start=3954
  _VECTOR3D._serialized_end=3997
  _SURROUNDINGVEHICLES._serialized_start=3999
  _SURROUNDINGVEHICLES._serialized_end=4090
  _TRAJINFO._serialized_start=4093
  _TRAJINFO._serialized_end=5048
  _MEMORYCRUISE._serialized_start=5050
  _MEMORYCRUISE._serialized_end=5129
# @@protoc_insertion_point(module_scope)
